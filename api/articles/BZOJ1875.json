{"title":"BZOJ1975","slug":"BZOJ1875","date":"2017-08-31T16:00:00.000Z","updated":"2018-01-22T10:49:10.000Z","comments":true,"excerpt":"","content":"<h3 id=\"BZOJ1975-HH去散步-图论-矩阵\"><a href=\"#BZOJ1975-HH去散步-图论-矩阵\" class=\"headerlink\" title=\"[BZOJ1975]HH去散步 图论+矩阵\"></a>[BZOJ1975]HH去散步 图论+矩阵</h3><hr>\n<h4 id=\"题目大意\"><a href=\"#题目大意\" class=\"headerlink\" title=\"题目大意\"></a>题目大意</h4><p>要求出在一个m条边，n个点的图中，相邻两次走的边不能相同，求在t时间时从起点A走到终点B的路径方案总数。将答案mod45989</p>\n<p><strong>输入格式：</strong><br>第一行：五个整数N，M，t，A，B。<br>后面的m行，每行有两个数 $ a_i $   $b_i$，表示路口$a_i$  $b_i$有有一条边。<br><strong>输出格式：</strong><br>一个整数，表示答案。</p>\n<p><strong>输入输出样例</strong><br><strong>input</strong><br>4 5 3 0 0<br>0 1<br>0 2<br>0 3<br>2 1<br>3 2<br><strong>output</strong><br>4</p>\n<p><strong>Hint</strong></p>\n<p>对于30%的数据，N ≤ 4，M ≤ 10，t ≤ 10。 对于100%的数据，N ≤ 20，M ≤ 60，t ≤ 2^30，0 ≤ A,B</p>\n<hr>\n<p><strong>解题分析</strong><br>题目问你路径的方案总数，首先就想到要用矩阵＋floyd的算法来求。<br>我们根据floyd的原理可以知道$L[i][j]=\\sum\\limits_{k=1}^{n}L[i][k]<em>L[k][j]$<br>所以我们可以建立一个矩阵  $g[i][j]$代表有一条从i到j的比。将这个矩阵幂t次，$g[i][j]$就代表i到j的走t条边的方案数。<br>因为这一题相邻两次走的边不能相同，所以我们就将边变成点来求方案数。<br>那么怎么统计答案呢？我们可以有一个转移矩阵2m</em>2m，其中$f[i][j]$代表第i条边(原图中)的起点与第j条边(原图中)是一个点(且ij不能是同一条边)，就代表点(新图)i与点(新图)j是相连的。答案矩阵是一个1*2m的矩阵,$ans[1][i]$代表第i(原图)条边的终点为题目给的A.把ans与自乘t次的F矩阵相乘。然后<br>　$$\\sum ans[1][i]（i代表终点为B的点(原图的边)）$$就是答案。<br>其实我们可以理解为，ans就是加了一个虚点，代表着一个与所有起点为A的点(原图中的边)相连的点。乘后的ans代表这个虚点到所以点的方案。我们只要统计终点为B的点的方案数就可以了。<br>代码自带大常数＝＝！<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;climits&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MAXN (60+10)*2</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> max(a,b) (a&gt;b?a:b)</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> min(a,b) (a&lt;b?a:b)</span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> mod=<span class=\"number\">45989</span>,n,m,a,b,t,num,head[MAXN],tot,tail[MAXN],M;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Edge</span>&#123;</span></div><div class=\"line\">    <span class=\"keyword\">int</span> next,to,from,next1;</div><div class=\"line\">&#125;edge[MAXN&lt;&lt;<span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> from,<span class=\"keyword\">int</span> to)</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">    edge[++num].next=head[from];</div><div class=\"line\">    edge[num].next1=tail[to];</div><div class=\"line\">    edge[num].to=to;</div><div class=\"line\">    edge[num].from=from;</div><div class=\"line\">    head[from]=num;</div><div class=\"line\">    tail[to]=num;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">matrix</span>&#123;</span></div><div class=\"line\">    <span class=\"keyword\">int</span> n,m;</div><div class=\"line\">    <span class=\"keyword\">int</span> data[MAXN][MAXN];</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=m;j++)</div><div class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,data[i][j]);</div><div class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    matrix <span class=\"keyword\">operator</span> * (matrix b)</div><div class=\"line\">    &#123;</div><div class=\"line\">        matrix ans;</div><div class=\"line\">        <span class=\"built_in\">memset</span>(ans.data,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(ans.data));</div><div class=\"line\">        ans.n=n;ans.m=b.m;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=ans.n;i++) </div><div class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=ans.m;j++) </div><div class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">1</span>;k&lt;=ans.m;k++)</div><div class=\"line\">                    ans.data[i][j]+=(data[i][k]*b.data[k][j])%mod,ans.data[i][j]%=mod;</div><div class=\"line\">        <span class=\"keyword\">return</span> ans;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">too</span><span class=\"params\">(matrix b)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        n=b.n;m=b.m;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)</div><div class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=m;j++)</div><div class=\"line\">                data[i][j]=b.data[i][j];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;f,ans,zero,pf;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">power</span><span class=\"params\">(<span class=\"keyword\">int</span> k)</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;    </div><div class=\"line\">    <span class=\"keyword\">if</span>(k==<span class=\"number\">1</span>) pf=f;</div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        power(k/<span class=\"number\">2</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span>(k%<span class=\"number\">2</span>==<span class=\"number\">1</span>) pf=pf*pf,pf=pf*f;</div><div class=\"line\">        <span class=\"keyword\">else</span> pf=pf*pf;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%d%d%d\"</span>,&amp;n,&amp;m,&amp;t,&amp;a,&amp;b);</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;i++)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> x,y;</div><div class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;x,&amp;y);</div><div class=\"line\">        add(x,y);</div><div class=\"line\">        add(y,x);</div><div class=\"line\">    &#125;</div><div class=\"line\">    f.n=f.m=<span class=\"number\">2</span>*m;ans.n=<span class=\"number\">1</span>;ans.m=<span class=\"number\">2</span>*m;M=<span class=\"number\">2</span>*m;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=head[a];i;i=edge[i].next) ans.data[<span class=\"number\">1</span>][i]=<span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> s=<span class=\"number\">0</span>;s&lt;n;s++)</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=head[s];i;i=edge[i].next)</div><div class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=head[edge[i].to];j;j=edge[j].next)</div><div class=\"line\">            <span class=\"keyword\">if</span>((i+<span class=\"number\">1</span>)!=((j+<span class=\"number\">1</span>)^<span class=\"number\">1</span>))</div><div class=\"line\">            &#123;</div><div class=\"line\">                f.data[i][j]++;</div><div class=\"line\">            &#125;</div><div class=\"line\">    power(t<span class=\"number\">-1</span>);ans=ans*pf;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=tail[b];i;i=edge[i].next1) </div><div class=\"line\">        tot=(tot+ans.data[<span class=\"number\">1</span>][i])%mod;</div><div class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,tot);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","thumbnail":"../img/drawerCover.jpg","primarycolor":"red","categories":[],"tags":[]}